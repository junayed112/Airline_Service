name: Deploy Spring Boot Application

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build with Maven
      run: mvn -B package --file Airline_Service/pom.xml -DskipTests

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build Airline_Service -t junayed954/airline-service:latest

    - name: Push Docker image
      run: docker push junayed954/airline-service:latest

    - name: Deploy with Docker Compose
      run: |
        docker-compose -f Airline_Service/docker-compose.yml down
        docker-compose -f Airline_Service/docker-compose.yml up -d

    - name: Create a source location
      run: |
        curl --location 'http://localhost:8080/service-0.0.1-SNAPSHOT/api/v1/location/create' \
        --header 'Content-Type: application/json' \
        --data '{
          "airportName": "Hazrat Shahjalal AirPort",
          "city": "Dhaka",
          "country": "Bangladesh"
        }'

    - name: Create a destination location
      run: |
        curl --location 'http://localhost:8080/service-0.0.1-SNAPSHOT/api/v1/location/create' \
        --header 'Content-Type: application/json' \
        --data '{
          "airportName": "John F. Kennedy International Airport",
          "city": "New York",
          "country": "USA"
        }'

    - name: Create a route
      run: |
        curl --location 'http://localhost:8080/api/v1/route/create' \
        --header 'Content-Type: application/json' \
        --data '{
          "sourceId": 1,
          "destinationId": 2
        }'

    - name: Create a flight
      run: |
        curl --location 'http://localhost:8080/api/v1/flight/create' \
        --header 'Content-Type: application/json' \
        --data '{
          "flightCategoryCode": 2,
          "routeId": 1,
          "departureTime": "2024-07-11T15:30:00",
          "arrivalTime": "2024-07-11T18:30:00"
        }'

    - name: Create tickets
      run: |
        curl --location 'http://localhost:8080/api/v1/ticket/create' \
        --header 'Content-Type: application/json' \
        --data '{
          "flightId": 1,
          "seatNumber": "A1",
          "unitPrice": 3000
        }'
        curl --location 'http://localhost:8080/api/v1/ticket/create' \
        --header 'Content-Type: application/json' \
        --data '{
          "flightId": 1,
          "seatNumber": "A2",
          "unitPrice": 3000
        }'

    - name: Book tickets
      run: |
        curl --location 'http://localhost:8080/api/v1/ticket/book' \
        --header 'Content-Type: application/json' \
        --data '{
          "ticketIds": [1,2],
          "flightNumber": "9058921b",
          "customerId": 1,
          "orderQuantity": 2
        }'

    - name: Create a food item
      run: |
        curl --location 'http://localhost:8080/api/v1/food/create' \
        --header 'Content-Type: application/json' \
        --data '{
          "name": "Burger",
          "unitPrice": 300,
          "quantity": 50
        }'

    - name: Order food
      run: |
        curl --location 'http://localhost:8080/api/v1/food/order' \
        --header 'Content-Type: application/json' \
        --data '{
          "foodItemId": 1,
          "quantity": 5
        }'

    - name: Get today's total sales
      run: |
        curl --location 'http://localhost:8080/api/v1/sales/total-sales-today'

    - name: Get top 3 selling routes
      run: |
        curl --location 'http://localhost:8080/api/v1/sales/top-selling-routes'

    - name: Get max sale day within a time range
      run: |
        curl --location 'http://localhost:8080/api/v1/sales/max-sale-day?startDate=2024-07-08&endDate=2024-07-11'
